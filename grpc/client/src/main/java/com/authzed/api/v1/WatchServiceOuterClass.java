// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/v1/watch_service.proto
package com.authzed.api.v1;

public final class WatchServiceOuterClass {

    private WatchServiceOuterClass() {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface WatchRequestOrBuilder extends // @@protoc_insertion_point(interface_extends:authzed.api.v1.WatchRequest)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * optional_object_types is a filter of resource object types to watch for changes.
         * If specified, only changes to the specified object types will be returned and
         * optional_relationship_filters cannot be used.
         * </pre>
         *
         * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
         *
         * @return A list containing the optionalObjectTypes.
         */
        java.util.List<java.lang.String> getOptionalObjectTypesList();

        /**
         * <pre>
         * optional_object_types is a filter of resource object types to watch for changes.
         * If specified, only changes to the specified object types will be returned and
         * optional_relationship_filters cannot be used.
         * </pre>
         *
         * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
         *
         * @return The count of optionalObjectTypes.
         */
        int getOptionalObjectTypesCount();

        /**
         * <pre>
         * optional_object_types is a filter of resource object types to watch for changes.
         * If specified, only changes to the specified object types will be returned and
         * optional_relationship_filters cannot be used.
         * </pre>
         *
         * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
         *
         * @param index The index of the element to return.
         * @return The optionalObjectTypes at the given index.
         */
        java.lang.String getOptionalObjectTypes(int index);

        /**
         * <pre>
         * optional_object_types is a filter of resource object types to watch for changes.
         * If specified, only changes to the specified object types will be returned and
         * optional_relationship_filters cannot be used.
         * </pre>
         *
         * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the optionalObjectTypes at the given index.
         */
        com.google.protobuf.ByteString getOptionalObjectTypesBytes(int index);

        /**
         * <pre>
         * optional_start_cursor is the ZedToken holding the point-in-time at
         * which to start watching for changes.
         * If not specified, the watch will begin at the current head revision
         * of the datastore, returning any updates that occur after the caller
         * makes the request.
         * Note that if this cursor references a point-in-time containing data
         * that has been garbage collected, an error will be returned.
         * </pre>
         *
         * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
         *
         * @return Whether the optionalStartCursor field is set.
         */
        boolean hasOptionalStartCursor();

        /**
         * <pre>
         * optional_start_cursor is the ZedToken holding the point-in-time at
         * which to start watching for changes.
         * If not specified, the watch will begin at the current head revision
         * of the datastore, returning any updates that occur after the caller
         * makes the request.
         * Note that if this cursor references a point-in-time containing data
         * that has been garbage collected, an error will be returned.
         * </pre>
         *
         * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
         *
         * @return The optionalStartCursor.
         */
        com.authzed.api.v1.Core.ZedToken getOptionalStartCursor();

        /**
         * <pre>
         * optional_start_cursor is the ZedToken holding the point-in-time at
         * which to start watching for changes.
         * If not specified, the watch will begin at the current head revision
         * of the datastore, returning any updates that occur after the caller
         * makes the request.
         * Note that if this cursor references a point-in-time containing data
         * that has been garbage collected, an error will be returned.
         * </pre>
         *
         * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
         */
        com.authzed.api.v1.Core.ZedTokenOrBuilder getOptionalStartCursorOrBuilder();

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        java.util.List<com.authzed.api.v1.PermissionService.RelationshipFilter> getOptionalRelationshipFiltersList();

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        com.authzed.api.v1.PermissionService.RelationshipFilter getOptionalRelationshipFilters(int index);

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        int getOptionalRelationshipFiltersCount();

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        java.util.List<? extends com.authzed.api.v1.PermissionService.RelationshipFilterOrBuilder> getOptionalRelationshipFiltersOrBuilderList();

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        com.authzed.api.v1.PermissionService.RelationshipFilterOrBuilder getOptionalRelationshipFiltersOrBuilder(int index);
    }

    /**
     * <pre>
     * WatchRequest specifies the object definitions for which we want to start
     * watching mutations, and an optional start snapshot for when to start
     * watching.
     * </pre>
     *
     * Protobuf type {@code authzed.api.v1.WatchRequest}
     */
    public static final class WatchRequest extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:authzed.api.v1.WatchRequest)
            WatchRequestOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use WatchRequest.newBuilder() to construct.
        private WatchRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private WatchRequest() {
            optionalObjectTypes_ = com.google.protobuf.LazyStringArrayList.emptyList();
            optionalRelationshipFilters_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new WatchRequest();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(com.authzed.api.v1.WatchServiceOuterClass.WatchRequest.class,
                            com.authzed.api.v1.WatchServiceOuterClass.WatchRequest.Builder.class);
        }

        public static final int OPTIONAL_OBJECT_TYPES_FIELD_NUMBER = 1;

        @SuppressWarnings("serial")
        private com.google.protobuf.LazyStringArrayList optionalObjectTypes_ = com.google.protobuf.LazyStringArrayList
                .emptyList();

        /**
         * <pre>
         * optional_object_types is a filter of resource object types to watch for changes.
         * If specified, only changes to the specified object types will be returned and
         * optional_relationship_filters cannot be used.
         * </pre>
         *
         * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
         *
         * @return A list containing the optionalObjectTypes.
         */
        public com.google.protobuf.ProtocolStringList getOptionalObjectTypesList() {
            return optionalObjectTypes_;
        }

        /**
         * <pre>
         * optional_object_types is a filter of resource object types to watch for changes.
         * If specified, only changes to the specified object types will be returned and
         * optional_relationship_filters cannot be used.
         * </pre>
         *
         * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
         *
         * @return The count of optionalObjectTypes.
         */
        public int getOptionalObjectTypesCount() {
            return optionalObjectTypes_.size();
        }

        /**
         * <pre>
         * optional_object_types is a filter of resource object types to watch for changes.
         * If specified, only changes to the specified object types will be returned and
         * optional_relationship_filters cannot be used.
         * </pre>
         *
         * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
         *
         * @param index The index of the element to return.
         * @return The optionalObjectTypes at the given index.
         */
        public java.lang.String getOptionalObjectTypes(int index) {
            return optionalObjectTypes_.get(index);
        }

        /**
         * <pre>
         * optional_object_types is a filter of resource object types to watch for changes.
         * If specified, only changes to the specified object types will be returned and
         * optional_relationship_filters cannot be used.
         * </pre>
         *
         * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the optionalObjectTypes at the given index.
         */
        public com.google.protobuf.ByteString getOptionalObjectTypesBytes(int index) {
            return optionalObjectTypes_.getByteString(index);
        }

        public static final int OPTIONAL_START_CURSOR_FIELD_NUMBER = 2;

        private com.authzed.api.v1.Core.ZedToken optionalStartCursor_;

        /**
         * <pre>
         * optional_start_cursor is the ZedToken holding the point-in-time at
         * which to start watching for changes.
         * If not specified, the watch will begin at the current head revision
         * of the datastore, returning any updates that occur after the caller
         * makes the request.
         * Note that if this cursor references a point-in-time containing data
         * that has been garbage collected, an error will be returned.
         * </pre>
         *
         * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
         *
         * @return Whether the optionalStartCursor field is set.
         */
        @java.lang.Override
        public boolean hasOptionalStartCursor() {
            return optionalStartCursor_ != null;
        }

        /**
         * <pre>
         * optional_start_cursor is the ZedToken holding the point-in-time at
         * which to start watching for changes.
         * If not specified, the watch will begin at the current head revision
         * of the datastore, returning any updates that occur after the caller
         * makes the request.
         * Note that if this cursor references a point-in-time containing data
         * that has been garbage collected, an error will be returned.
         * </pre>
         *
         * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
         *
         * @return The optionalStartCursor.
         */
        @java.lang.Override
        public com.authzed.api.v1.Core.ZedToken getOptionalStartCursor() {
            return optionalStartCursor_ == null ? com.authzed.api.v1.Core.ZedToken.getDefaultInstance() : optionalStartCursor_;
        }

        /**
         * <pre>
         * optional_start_cursor is the ZedToken holding the point-in-time at
         * which to start watching for changes.
         * If not specified, the watch will begin at the current head revision
         * of the datastore, returning any updates that occur after the caller
         * makes the request.
         * Note that if this cursor references a point-in-time containing data
         * that has been garbage collected, an error will be returned.
         * </pre>
         *
         * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
         */
        @java.lang.Override
        public com.authzed.api.v1.Core.ZedTokenOrBuilder getOptionalStartCursorOrBuilder() {
            return optionalStartCursor_ == null ? com.authzed.api.v1.Core.ZedToken.getDefaultInstance() : optionalStartCursor_;
        }

        public static final int OPTIONAL_RELATIONSHIP_FILTERS_FIELD_NUMBER = 3;

        @SuppressWarnings("serial")
        private java.util.List<com.authzed.api.v1.PermissionService.RelationshipFilter> optionalRelationshipFilters_;

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        @java.lang.Override
        public java.util.List<com.authzed.api.v1.PermissionService.RelationshipFilter> getOptionalRelationshipFiltersList() {
            return optionalRelationshipFilters_;
        }

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        @java.lang.Override
        public java.util.List<? extends com.authzed.api.v1.PermissionService.RelationshipFilterOrBuilder> getOptionalRelationshipFiltersOrBuilderList() {
            return optionalRelationshipFilters_;
        }

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        @java.lang.Override
        public int getOptionalRelationshipFiltersCount() {
            return optionalRelationshipFilters_.size();
        }

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        @java.lang.Override
        public com.authzed.api.v1.PermissionService.RelationshipFilter getOptionalRelationshipFilters(int index) {
            return optionalRelationshipFilters_.get(index);
        }

        /**
         * <pre>
         * optional_relationship_filters, if specified, indicates the
         * filter(s) to apply to each relationship to be returned by watch.
         * The relationship will be returned as long as at least one filter matches,
         * this allows clients to match relationships on multiple filters on a single watch call.
         * If specified, optional_object_types cannot be used.
         * </pre>
         *
         * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
         */
        @java.lang.Override
        public com.authzed.api.v1.PermissionService.RelationshipFilterOrBuilder getOptionalRelationshipFiltersOrBuilder(
                int index) {
            return optionalRelationshipFilters_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            for (int i = 0; i < optionalObjectTypes_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, optionalObjectTypes_.getRaw(i));
            }
            if (optionalStartCursor_ != null) {
                output.writeMessage(2, getOptionalStartCursor());
            }
            for (int i = 0; i < optionalRelationshipFilters_.size(); i++) {
                output.writeMessage(3, optionalRelationshipFilters_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            {
                int dataSize = 0;
                for (int i = 0; i < optionalObjectTypes_.size(); i++) {
                    dataSize += computeStringSizeNoTag(optionalObjectTypes_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getOptionalObjectTypesList().size();
            }
            if (optionalStartCursor_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getOptionalStartCursor());
            }
            for (int i = 0; i < optionalRelationshipFilters_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, optionalRelationshipFilters_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.authzed.api.v1.WatchServiceOuterClass.WatchRequest)) {
                return super.equals(obj);
            }
            com.authzed.api.v1.WatchServiceOuterClass.WatchRequest other = (com.authzed.api.v1.WatchServiceOuterClass.WatchRequest) obj;
            if (!getOptionalObjectTypesList().equals(other.getOptionalObjectTypesList()))
                return false;
            if (hasOptionalStartCursor() != other.hasOptionalStartCursor())
                return false;
            if (hasOptionalStartCursor()) {
                if (!getOptionalStartCursor().equals(other.getOptionalStartCursor()))
                    return false;
            }
            if (!getOptionalRelationshipFiltersList().equals(other.getOptionalRelationshipFiltersList()))
                return false;
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getOptionalObjectTypesCount() > 0) {
                hash = (37 * hash) + OPTIONAL_OBJECT_TYPES_FIELD_NUMBER;
                hash = (53 * hash) + getOptionalObjectTypesList().hashCode();
            }
            if (hasOptionalStartCursor()) {
                hash = (37 * hash) + OPTIONAL_START_CURSOR_FIELD_NUMBER;
                hash = (53 * hash) + getOptionalStartCursor().hashCode();
            }
            if (getOptionalRelationshipFiltersCount() > 0) {
                hash = (37 * hash) + OPTIONAL_RELATIONSHIP_FILTERS_FIELD_NUMBER;
                hash = (53 * hash) + getOptionalRelationshipFiltersList().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseDelimitedFrom(java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(
                com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest parseFrom(
                com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.authzed.api.v1.WatchServiceOuterClass.WatchRequest prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * WatchRequest specifies the object definitions for which we want to start
         * watching mutations, and an optional start snapshot for when to start
         * watching.
         * </pre>
         *
         * Protobuf type {@code authzed.api.v1.WatchRequest}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:authzed.api.v1.WatchRequest)
                com.authzed.api.v1.WatchServiceOuterClass.WatchRequestOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(com.authzed.api.v1.WatchServiceOuterClass.WatchRequest.class,
                                com.authzed.api.v1.WatchServiceOuterClass.WatchRequest.Builder.class);
            }

            // Construct using com.authzed.api.v1.WatchServiceOuterClass.WatchRequest.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                optionalObjectTypes_ = com.google.protobuf.LazyStringArrayList.emptyList();
                optionalStartCursor_ = null;
                if (optionalStartCursorBuilder_ != null) {
                    optionalStartCursorBuilder_.dispose();
                    optionalStartCursorBuilder_ = null;
                }
                if (optionalRelationshipFiltersBuilder_ == null) {
                    optionalRelationshipFilters_ = java.util.Collections.emptyList();
                } else {
                    optionalRelationshipFilters_ = null;
                    optionalRelationshipFiltersBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_descriptor;
            }

            @java.lang.Override
            public com.authzed.api.v1.WatchServiceOuterClass.WatchRequest getDefaultInstanceForType() {
                return com.authzed.api.v1.WatchServiceOuterClass.WatchRequest.getDefaultInstance();
            }

            @java.lang.Override
            public com.authzed.api.v1.WatchServiceOuterClass.WatchRequest build() {
                com.authzed.api.v1.WatchServiceOuterClass.WatchRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public com.authzed.api.v1.WatchServiceOuterClass.WatchRequest buildPartial() {
                com.authzed.api.v1.WatchServiceOuterClass.WatchRequest result = new com.authzed.api.v1.WatchServiceOuterClass.WatchRequest(
                        this);
                buildPartialRepeatedFields(result);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartialRepeatedFields(com.authzed.api.v1.WatchServiceOuterClass.WatchRequest result) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) != 0)) {
                        optionalRelationshipFilters_ = java.util.Collections.unmodifiableList(optionalRelationshipFilters_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.optionalRelationshipFilters_ = optionalRelationshipFilters_;
                } else {
                    result.optionalRelationshipFilters_ = optionalRelationshipFiltersBuilder_.build();
                }
            }

            private void buildPartial0(com.authzed.api.v1.WatchServiceOuterClass.WatchRequest result) {
                int from_bitField0_ = bitField0_;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    optionalObjectTypes_.makeImmutable();
                    result.optionalObjectTypes_ = optionalObjectTypes_;
                }
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    result.optionalStartCursor_ = optionalStartCursorBuilder_ == null ? optionalStartCursor_
                            : optionalStartCursorBuilder_.build();
                }
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.authzed.api.v1.WatchServiceOuterClass.WatchRequest) {
                    return mergeFrom((com.authzed.api.v1.WatchServiceOuterClass.WatchRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.authzed.api.v1.WatchServiceOuterClass.WatchRequest other) {
                if (other == com.authzed.api.v1.WatchServiceOuterClass.WatchRequest.getDefaultInstance())
                    return this;
                if (!other.optionalObjectTypes_.isEmpty()) {
                    if (optionalObjectTypes_.isEmpty()) {
                        optionalObjectTypes_ = other.optionalObjectTypes_;
                        bitField0_ |= 0x00000001;
                    } else {
                        ensureOptionalObjectTypesIsMutable();
                        optionalObjectTypes_.addAll(other.optionalObjectTypes_);
                    }
                    onChanged();
                }
                if (other.hasOptionalStartCursor()) {
                    mergeOptionalStartCursor(other.getOptionalStartCursor());
                }
                if (optionalRelationshipFiltersBuilder_ == null) {
                    if (!other.optionalRelationshipFilters_.isEmpty()) {
                        if (optionalRelationshipFilters_.isEmpty()) {
                            optionalRelationshipFilters_ = other.optionalRelationshipFilters_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureOptionalRelationshipFiltersIsMutable();
                            optionalRelationshipFilters_.addAll(other.optionalRelationshipFilters_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.optionalRelationshipFilters_.isEmpty()) {
                        if (optionalRelationshipFiltersBuilder_.isEmpty()) {
                            optionalRelationshipFiltersBuilder_.dispose();
                            optionalRelationshipFiltersBuilder_ = null;
                            optionalRelationshipFilters_ = other.optionalRelationshipFilters_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            optionalRelationshipFiltersBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                                    ? getOptionalRelationshipFiltersFieldBuilder()
                                    : null;
                        } else {
                            optionalRelationshipFiltersBuilder_.addAllMessages(other.optionalRelationshipFilters_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                java.lang.String s = input.readStringRequireUtf8();
                                ensureOptionalObjectTypesIsMutable();
                                optionalObjectTypes_.add(s);
                                break;
                            }
                            // case 10
                            case 18: {
                                input.readMessage(getOptionalStartCursorFieldBuilder().getBuilder(), extensionRegistry);
                                bitField0_ |= 0x00000002;
                                break;
                            }
                            // case 18
                            case 26: {
                                com.authzed.api.v1.PermissionService.RelationshipFilter m = input.readMessage(
                                        com.authzed.api.v1.PermissionService.RelationshipFilter.parser(), extensionRegistry);
                                if (optionalRelationshipFiltersBuilder_ == null) {
                                    ensureOptionalRelationshipFiltersIsMutable();
                                    optionalRelationshipFilters_.add(m);
                                } else {
                                    optionalRelationshipFiltersBuilder_.addMessage(m);
                                }
                                break;
                            }
                            // case 26
                            default: {
                                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                    // was an endgroup tag
                                    done = true;
                                }
                                break;
                            }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.LazyStringArrayList optionalObjectTypes_ = com.google.protobuf.LazyStringArrayList
                    .emptyList();

            private void ensureOptionalObjectTypesIsMutable() {
                if (!optionalObjectTypes_.isModifiable()) {
                    optionalObjectTypes_ = new com.google.protobuf.LazyStringArrayList(optionalObjectTypes_);
                }
                bitField0_ |= 0x00000001;
            }

            /**
             * <pre>
             * optional_object_types is a filter of resource object types to watch for changes.
             * If specified, only changes to the specified object types will be returned and
             * optional_relationship_filters cannot be used.
             * </pre>
             *
             * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
             *
             * @return A list containing the optionalObjectTypes.
             */
            public com.google.protobuf.ProtocolStringList getOptionalObjectTypesList() {
                optionalObjectTypes_.makeImmutable();
                return optionalObjectTypes_;
            }

            /**
             * <pre>
             * optional_object_types is a filter of resource object types to watch for changes.
             * If specified, only changes to the specified object types will be returned and
             * optional_relationship_filters cannot be used.
             * </pre>
             *
             * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
             *
             * @return The count of optionalObjectTypes.
             */
            public int getOptionalObjectTypesCount() {
                return optionalObjectTypes_.size();
            }

            /**
             * <pre>
             * optional_object_types is a filter of resource object types to watch for changes.
             * If specified, only changes to the specified object types will be returned and
             * optional_relationship_filters cannot be used.
             * </pre>
             *
             * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
             *
             * @param index The index of the element to return.
             * @return The optionalObjectTypes at the given index.
             */
            public java.lang.String getOptionalObjectTypes(int index) {
                return optionalObjectTypes_.get(index);
            }

            /**
             * <pre>
             * optional_object_types is a filter of resource object types to watch for changes.
             * If specified, only changes to the specified object types will be returned and
             * optional_relationship_filters cannot be used.
             * </pre>
             *
             * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
             *
             * @param index The index of the value to return.
             * @return The bytes of the optionalObjectTypes at the given index.
             */
            public com.google.protobuf.ByteString getOptionalObjectTypesBytes(int index) {
                return optionalObjectTypes_.getByteString(index);
            }

            /**
             * <pre>
             * optional_object_types is a filter of resource object types to watch for changes.
             * If specified, only changes to the specified object types will be returned and
             * optional_relationship_filters cannot be used.
             * </pre>
             *
             * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
             *
             * @param index The index to set the value at.
             * @param value The optionalObjectTypes to set.
             * @return This builder for chaining.
             */
            public Builder setOptionalObjectTypes(int index, java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureOptionalObjectTypesIsMutable();
                optionalObjectTypes_.set(index, value);
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * optional_object_types is a filter of resource object types to watch for changes.
             * If specified, only changes to the specified object types will be returned and
             * optional_relationship_filters cannot be used.
             * </pre>
             *
             * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
             *
             * @param value The optionalObjectTypes to add.
             * @return This builder for chaining.
             */
            public Builder addOptionalObjectTypes(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureOptionalObjectTypesIsMutable();
                optionalObjectTypes_.add(value);
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * optional_object_types is a filter of resource object types to watch for changes.
             * If specified, only changes to the specified object types will be returned and
             * optional_relationship_filters cannot be used.
             * </pre>
             *
             * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
             *
             * @param values The optionalObjectTypes to add.
             * @return This builder for chaining.
             */
            public Builder addAllOptionalObjectTypes(java.lang.Iterable<java.lang.String> values) {
                ensureOptionalObjectTypesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(values, optionalObjectTypes_);
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * optional_object_types is a filter of resource object types to watch for changes.
             * If specified, only changes to the specified object types will be returned and
             * optional_relationship_filters cannot be used.
             * </pre>
             *
             * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearOptionalObjectTypes() {
                optionalObjectTypes_ = com.google.protobuf.LazyStringArrayList.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
                ;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * optional_object_types is a filter of resource object types to watch for changes.
             * If specified, only changes to the specified object types will be returned and
             * optional_relationship_filters cannot be used.
             * </pre>
             *
             * <code>repeated string optional_object_types = 1 [(.validate.rules) = { ... }</code>
             *
             * @param value The bytes of the optionalObjectTypes to add.
             * @return This builder for chaining.
             */
            public Builder addOptionalObjectTypesBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                ensureOptionalObjectTypesIsMutable();
                optionalObjectTypes_.add(value);
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            private com.authzed.api.v1.Core.ZedToken optionalStartCursor_;

            private com.google.protobuf.SingleFieldBuilderV3<com.authzed.api.v1.Core.ZedToken, com.authzed.api.v1.Core.ZedToken.Builder, com.authzed.api.v1.Core.ZedTokenOrBuilder> optionalStartCursorBuilder_;

            /**
             * <pre>
             * optional_start_cursor is the ZedToken holding the point-in-time at
             * which to start watching for changes.
             * If not specified, the watch will begin at the current head revision
             * of the datastore, returning any updates that occur after the caller
             * makes the request.
             * Note that if this cursor references a point-in-time containing data
             * that has been garbage collected, an error will be returned.
             * </pre>
             *
             * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
             *
             * @return Whether the optionalStartCursor field is set.
             */
            public boolean hasOptionalStartCursor() {
                return ((bitField0_ & 0x00000002) != 0);
            }

            /**
             * <pre>
             * optional_start_cursor is the ZedToken holding the point-in-time at
             * which to start watching for changes.
             * If not specified, the watch will begin at the current head revision
             * of the datastore, returning any updates that occur after the caller
             * makes the request.
             * Note that if this cursor references a point-in-time containing data
             * that has been garbage collected, an error will be returned.
             * </pre>
             *
             * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
             *
             * @return The optionalStartCursor.
             */
            public com.authzed.api.v1.Core.ZedToken getOptionalStartCursor() {
                if (optionalStartCursorBuilder_ == null) {
                    return optionalStartCursor_ == null ? com.authzed.api.v1.Core.ZedToken.getDefaultInstance()
                            : optionalStartCursor_;
                } else {
                    return optionalStartCursorBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * optional_start_cursor is the ZedToken holding the point-in-time at
             * which to start watching for changes.
             * If not specified, the watch will begin at the current head revision
             * of the datastore, returning any updates that occur after the caller
             * makes the request.
             * Note that if this cursor references a point-in-time containing data
             * that has been garbage collected, an error will be returned.
             * </pre>
             *
             * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
             */
            public Builder setOptionalStartCursor(com.authzed.api.v1.Core.ZedToken value) {
                if (optionalStartCursorBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    optionalStartCursor_ = value;
                } else {
                    optionalStartCursorBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * optional_start_cursor is the ZedToken holding the point-in-time at
             * which to start watching for changes.
             * If not specified, the watch will begin at the current head revision
             * of the datastore, returning any updates that occur after the caller
             * makes the request.
             * Note that if this cursor references a point-in-time containing data
             * that has been garbage collected, an error will be returned.
             * </pre>
             *
             * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
             */
            public Builder setOptionalStartCursor(com.authzed.api.v1.Core.ZedToken.Builder builderForValue) {
                if (optionalStartCursorBuilder_ == null) {
                    optionalStartCursor_ = builderForValue.build();
                } else {
                    optionalStartCursorBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * optional_start_cursor is the ZedToken holding the point-in-time at
             * which to start watching for changes.
             * If not specified, the watch will begin at the current head revision
             * of the datastore, returning any updates that occur after the caller
             * makes the request.
             * Note that if this cursor references a point-in-time containing data
             * that has been garbage collected, an error will be returned.
             * </pre>
             *
             * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
             */
            public Builder mergeOptionalStartCursor(com.authzed.api.v1.Core.ZedToken value) {
                if (optionalStartCursorBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) != 0) && optionalStartCursor_ != null
                            && optionalStartCursor_ != com.authzed.api.v1.Core.ZedToken.getDefaultInstance()) {
                        getOptionalStartCursorBuilder().mergeFrom(value);
                    } else {
                        optionalStartCursor_ = value;
                    }
                } else {
                    optionalStartCursorBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * optional_start_cursor is the ZedToken holding the point-in-time at
             * which to start watching for changes.
             * If not specified, the watch will begin at the current head revision
             * of the datastore, returning any updates that occur after the caller
             * makes the request.
             * Note that if this cursor references a point-in-time containing data
             * that has been garbage collected, an error will be returned.
             * </pre>
             *
             * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
             */
            public Builder clearOptionalStartCursor() {
                bitField0_ = (bitField0_ & ~0x00000002);
                optionalStartCursor_ = null;
                if (optionalStartCursorBuilder_ != null) {
                    optionalStartCursorBuilder_.dispose();
                    optionalStartCursorBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <pre>
             * optional_start_cursor is the ZedToken holding the point-in-time at
             * which to start watching for changes.
             * If not specified, the watch will begin at the current head revision
             * of the datastore, returning any updates that occur after the caller
             * makes the request.
             * Note that if this cursor references a point-in-time containing data
             * that has been garbage collected, an error will be returned.
             * </pre>
             *
             * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
             */
            public com.authzed.api.v1.Core.ZedToken.Builder getOptionalStartCursorBuilder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getOptionalStartCursorFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * optional_start_cursor is the ZedToken holding the point-in-time at
             * which to start watching for changes.
             * If not specified, the watch will begin at the current head revision
             * of the datastore, returning any updates that occur after the caller
             * makes the request.
             * Note that if this cursor references a point-in-time containing data
             * that has been garbage collected, an error will be returned.
             * </pre>
             *
             * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
             */
            public com.authzed.api.v1.Core.ZedTokenOrBuilder getOptionalStartCursorOrBuilder() {
                if (optionalStartCursorBuilder_ != null) {
                    return optionalStartCursorBuilder_.getMessageOrBuilder();
                } else {
                    return optionalStartCursor_ == null ? com.authzed.api.v1.Core.ZedToken.getDefaultInstance()
                            : optionalStartCursor_;
                }
            }

            /**
             * <pre>
             * optional_start_cursor is the ZedToken holding the point-in-time at
             * which to start watching for changes.
             * If not specified, the watch will begin at the current head revision
             * of the datastore, returning any updates that occur after the caller
             * makes the request.
             * Note that if this cursor references a point-in-time containing data
             * that has been garbage collected, an error will be returned.
             * </pre>
             *
             * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<com.authzed.api.v1.Core.ZedToken, com.authzed.api.v1.Core.ZedToken.Builder, com.authzed.api.v1.Core.ZedTokenOrBuilder> getOptionalStartCursorFieldBuilder() {
                if (optionalStartCursorBuilder_ == null) {
                    optionalStartCursorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<com.authzed.api.v1.Core.ZedToken, com.authzed.api.v1.Core.ZedToken.Builder, com.authzed.api.v1.Core.ZedTokenOrBuilder>(
                            getOptionalStartCursor(), getParentForChildren(), isClean());
                    optionalStartCursor_ = null;
                }
                return optionalStartCursorBuilder_;
            }

            private java.util.List<com.authzed.api.v1.PermissionService.RelationshipFilter> optionalRelationshipFilters_ = java.util.Collections
                    .emptyList();

            private void ensureOptionalRelationshipFiltersIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    optionalRelationshipFilters_ = new java.util.ArrayList<com.authzed.api.v1.PermissionService.RelationshipFilter>(
                            optionalRelationshipFilters_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<com.authzed.api.v1.PermissionService.RelationshipFilter, com.authzed.api.v1.PermissionService.RelationshipFilter.Builder, com.authzed.api.v1.PermissionService.RelationshipFilterOrBuilder> optionalRelationshipFiltersBuilder_;

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public java.util.List<com.authzed.api.v1.PermissionService.RelationshipFilter> getOptionalRelationshipFiltersList() {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(optionalRelationshipFilters_);
                } else {
                    return optionalRelationshipFiltersBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public int getOptionalRelationshipFiltersCount() {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    return optionalRelationshipFilters_.size();
                } else {
                    return optionalRelationshipFiltersBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public com.authzed.api.v1.PermissionService.RelationshipFilter getOptionalRelationshipFilters(int index) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    return optionalRelationshipFilters_.get(index);
                } else {
                    return optionalRelationshipFiltersBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public Builder setOptionalRelationshipFilters(int index,
                    com.authzed.api.v1.PermissionService.RelationshipFilter value) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOptionalRelationshipFiltersIsMutable();
                    optionalRelationshipFilters_.set(index, value);
                    onChanged();
                } else {
                    optionalRelationshipFiltersBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public Builder setOptionalRelationshipFilters(int index,
                    com.authzed.api.v1.PermissionService.RelationshipFilter.Builder builderForValue) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    ensureOptionalRelationshipFiltersIsMutable();
                    optionalRelationshipFilters_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    optionalRelationshipFiltersBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public Builder addOptionalRelationshipFilters(com.authzed.api.v1.PermissionService.RelationshipFilter value) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOptionalRelationshipFiltersIsMutable();
                    optionalRelationshipFilters_.add(value);
                    onChanged();
                } else {
                    optionalRelationshipFiltersBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public Builder addOptionalRelationshipFilters(int index,
                    com.authzed.api.v1.PermissionService.RelationshipFilter value) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOptionalRelationshipFiltersIsMutable();
                    optionalRelationshipFilters_.add(index, value);
                    onChanged();
                } else {
                    optionalRelationshipFiltersBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public Builder addOptionalRelationshipFilters(
                    com.authzed.api.v1.PermissionService.RelationshipFilter.Builder builderForValue) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    ensureOptionalRelationshipFiltersIsMutable();
                    optionalRelationshipFilters_.add(builderForValue.build());
                    onChanged();
                } else {
                    optionalRelationshipFiltersBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public Builder addOptionalRelationshipFilters(int index,
                    com.authzed.api.v1.PermissionService.RelationshipFilter.Builder builderForValue) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    ensureOptionalRelationshipFiltersIsMutable();
                    optionalRelationshipFilters_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    optionalRelationshipFiltersBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public Builder addAllOptionalRelationshipFilters(
                    java.lang.Iterable<? extends com.authzed.api.v1.PermissionService.RelationshipFilter> values) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    ensureOptionalRelationshipFiltersIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, optionalRelationshipFilters_);
                    onChanged();
                } else {
                    optionalRelationshipFiltersBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public Builder clearOptionalRelationshipFilters() {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    optionalRelationshipFilters_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    optionalRelationshipFiltersBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public Builder removeOptionalRelationshipFilters(int index) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    ensureOptionalRelationshipFiltersIsMutable();
                    optionalRelationshipFilters_.remove(index);
                    onChanged();
                } else {
                    optionalRelationshipFiltersBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public com.authzed.api.v1.PermissionService.RelationshipFilter.Builder getOptionalRelationshipFiltersBuilder(
                    int index) {
                return getOptionalRelationshipFiltersFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public com.authzed.api.v1.PermissionService.RelationshipFilterOrBuilder getOptionalRelationshipFiltersOrBuilder(
                    int index) {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    return optionalRelationshipFilters_.get(index);
                } else {
                    return optionalRelationshipFiltersBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public java.util.List<? extends com.authzed.api.v1.PermissionService.RelationshipFilterOrBuilder> getOptionalRelationshipFiltersOrBuilderList() {
                if (optionalRelationshipFiltersBuilder_ != null) {
                    return optionalRelationshipFiltersBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(optionalRelationshipFilters_);
                }
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public com.authzed.api.v1.PermissionService.RelationshipFilter.Builder addOptionalRelationshipFiltersBuilder() {
                return getOptionalRelationshipFiltersFieldBuilder()
                        .addBuilder(com.authzed.api.v1.PermissionService.RelationshipFilter.getDefaultInstance());
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public com.authzed.api.v1.PermissionService.RelationshipFilter.Builder addOptionalRelationshipFiltersBuilder(
                    int index) {
                return getOptionalRelationshipFiltersFieldBuilder().addBuilder(index,
                        com.authzed.api.v1.PermissionService.RelationshipFilter.getDefaultInstance());
            }

            /**
             * <pre>
             * optional_relationship_filters, if specified, indicates the
             * filter(s) to apply to each relationship to be returned by watch.
             * The relationship will be returned as long as at least one filter matches,
             * this allows clients to match relationships on multiple filters on a single watch call.
             * If specified, optional_object_types cannot be used.
             * </pre>
             *
             * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3;</code>
             */
            public java.util.List<com.authzed.api.v1.PermissionService.RelationshipFilter.Builder> getOptionalRelationshipFiltersBuilderList() {
                return getOptionalRelationshipFiltersFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<com.authzed.api.v1.PermissionService.RelationshipFilter, com.authzed.api.v1.PermissionService.RelationshipFilter.Builder, com.authzed.api.v1.PermissionService.RelationshipFilterOrBuilder> getOptionalRelationshipFiltersFieldBuilder() {
                if (optionalRelationshipFiltersBuilder_ == null) {
                    optionalRelationshipFiltersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<com.authzed.api.v1.PermissionService.RelationshipFilter, com.authzed.api.v1.PermissionService.RelationshipFilter.Builder, com.authzed.api.v1.PermissionService.RelationshipFilterOrBuilder>(
                            optionalRelationshipFilters_, ((bitField0_ & 0x00000004) != 0), getParentForChildren(), isClean());
                    optionalRelationshipFilters_ = null;
                }
                return optionalRelationshipFiltersBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:authzed.api.v1.WatchRequest)
        }

        // @@protoc_insertion_point(class_scope:authzed.api.v1.WatchRequest)
        private static final com.authzed.api.v1.WatchServiceOuterClass.WatchRequest DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new com.authzed.api.v1.WatchServiceOuterClass.WatchRequest();
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchRequest getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<WatchRequest> PARSER = new com.google.protobuf.AbstractParser<WatchRequest>() {

            @java.lang.Override
            public WatchRequest parsePartialFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e)
                            .setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<WatchRequest> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<WatchRequest> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public com.authzed.api.v1.WatchServiceOuterClass.WatchRequest getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface WatchResponseOrBuilder extends // @@protoc_insertion_point(interface_extends:authzed.api.v1.WatchResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        java.util.List<com.authzed.api.v1.Core.RelationshipUpdate> getUpdatesList();

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        com.authzed.api.v1.Core.RelationshipUpdate getUpdates(int index);

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        int getUpdatesCount();

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        java.util.List<? extends com.authzed.api.v1.Core.RelationshipUpdateOrBuilder> getUpdatesOrBuilderList();

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        com.authzed.api.v1.Core.RelationshipUpdateOrBuilder getUpdatesOrBuilder(int index);

        /**
         * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
         *
         * @return Whether the changesThrough field is set.
         */
        boolean hasChangesThrough();

        /**
         * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
         *
         * @return The changesThrough.
         */
        com.authzed.api.v1.Core.ZedToken getChangesThrough();

        /**
         * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
         */
        com.authzed.api.v1.Core.ZedTokenOrBuilder getChangesThroughOrBuilder();
    }

    /**
     * <pre>
     * WatchResponse contains all tuple modification events in ascending
     * timestamp order, from the requested start snapshot to a snapshot
     * encoded in the watch response. The client can use the snapshot to resume
     * watching where the previous watch response left off.
     * </pre>
     *
     * Protobuf type {@code authzed.api.v1.WatchResponse}
     */
    public static final class WatchResponse extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:authzed.api.v1.WatchResponse)
            WatchResponseOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use WatchResponse.newBuilder() to construct.
        private WatchResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private WatchResponse() {
            updates_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new WatchResponse();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchResponse_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(com.authzed.api.v1.WatchServiceOuterClass.WatchResponse.class,
                            com.authzed.api.v1.WatchServiceOuterClass.WatchResponse.Builder.class);
        }

        public static final int UPDATES_FIELD_NUMBER = 1;

        @SuppressWarnings("serial")
        private java.util.List<com.authzed.api.v1.Core.RelationshipUpdate> updates_;

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        @java.lang.Override
        public java.util.List<com.authzed.api.v1.Core.RelationshipUpdate> getUpdatesList() {
            return updates_;
        }

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        @java.lang.Override
        public java.util.List<? extends com.authzed.api.v1.Core.RelationshipUpdateOrBuilder> getUpdatesOrBuilderList() {
            return updates_;
        }

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        @java.lang.Override
        public int getUpdatesCount() {
            return updates_.size();
        }

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        @java.lang.Override
        public com.authzed.api.v1.Core.RelationshipUpdate getUpdates(int index) {
            return updates_.get(index);
        }

        /**
         * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
         */
        @java.lang.Override
        public com.authzed.api.v1.Core.RelationshipUpdateOrBuilder getUpdatesOrBuilder(int index) {
            return updates_.get(index);
        }

        public static final int CHANGES_THROUGH_FIELD_NUMBER = 2;

        private com.authzed.api.v1.Core.ZedToken changesThrough_;

        /**
         * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
         *
         * @return Whether the changesThrough field is set.
         */
        @java.lang.Override
        public boolean hasChangesThrough() {
            return changesThrough_ != null;
        }

        /**
         * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
         *
         * @return The changesThrough.
         */
        @java.lang.Override
        public com.authzed.api.v1.Core.ZedToken getChangesThrough() {
            return changesThrough_ == null ? com.authzed.api.v1.Core.ZedToken.getDefaultInstance() : changesThrough_;
        }

        /**
         * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
         */
        @java.lang.Override
        public com.authzed.api.v1.Core.ZedTokenOrBuilder getChangesThroughOrBuilder() {
            return changesThrough_ == null ? com.authzed.api.v1.Core.ZedToken.getDefaultInstance() : changesThrough_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            for (int i = 0; i < updates_.size(); i++) {
                output.writeMessage(1, updates_.get(i));
            }
            if (changesThrough_ != null) {
                output.writeMessage(2, getChangesThrough());
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            for (int i = 0; i < updates_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, updates_.get(i));
            }
            if (changesThrough_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getChangesThrough());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.authzed.api.v1.WatchServiceOuterClass.WatchResponse)) {
                return super.equals(obj);
            }
            com.authzed.api.v1.WatchServiceOuterClass.WatchResponse other = (com.authzed.api.v1.WatchServiceOuterClass.WatchResponse) obj;
            if (!getUpdatesList().equals(other.getUpdatesList()))
                return false;
            if (hasChangesThrough() != other.hasChangesThrough())
                return false;
            if (hasChangesThrough()) {
                if (!getChangesThrough().equals(other.getChangesThrough()))
                    return false;
            }
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getUpdatesCount() > 0) {
                hash = (37 * hash) + UPDATES_FIELD_NUMBER;
                hash = (53 * hash) + getUpdatesList().hashCode();
            }
            if (hasChangesThrough()) {
                hash = (37 * hash) + CHANGES_THROUGH_FIELD_NUMBER;
                hash = (53 * hash) + getChangesThrough().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseDelimitedFrom(java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(
                com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse parseFrom(
                com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.authzed.api.v1.WatchServiceOuterClass.WatchResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * WatchResponse contains all tuple modification events in ascending
         * timestamp order, from the requested start snapshot to a snapshot
         * encoded in the watch response. The client can use the snapshot to resume
         * watching where the previous watch response left off.
         * </pre>
         *
         * Protobuf type {@code authzed.api.v1.WatchResponse}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:authzed.api.v1.WatchResponse)
                com.authzed.api.v1.WatchServiceOuterClass.WatchResponseOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchResponse_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(com.authzed.api.v1.WatchServiceOuterClass.WatchResponse.class,
                                com.authzed.api.v1.WatchServiceOuterClass.WatchResponse.Builder.class);
            }

            // Construct using com.authzed.api.v1.WatchServiceOuterClass.WatchResponse.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                if (updatesBuilder_ == null) {
                    updates_ = java.util.Collections.emptyList();
                } else {
                    updates_ = null;
                    updatesBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                changesThrough_ = null;
                if (changesThroughBuilder_ != null) {
                    changesThroughBuilder_.dispose();
                    changesThroughBuilder_ = null;
                }
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchResponse_descriptor;
            }

            @java.lang.Override
            public com.authzed.api.v1.WatchServiceOuterClass.WatchResponse getDefaultInstanceForType() {
                return com.authzed.api.v1.WatchServiceOuterClass.WatchResponse.getDefaultInstance();
            }

            @java.lang.Override
            public com.authzed.api.v1.WatchServiceOuterClass.WatchResponse build() {
                com.authzed.api.v1.WatchServiceOuterClass.WatchResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public com.authzed.api.v1.WatchServiceOuterClass.WatchResponse buildPartial() {
                com.authzed.api.v1.WatchServiceOuterClass.WatchResponse result = new com.authzed.api.v1.WatchServiceOuterClass.WatchResponse(
                        this);
                buildPartialRepeatedFields(result);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartialRepeatedFields(com.authzed.api.v1.WatchServiceOuterClass.WatchResponse result) {
                if (updatesBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        updates_ = java.util.Collections.unmodifiableList(updates_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.updates_ = updates_;
                } else {
                    result.updates_ = updatesBuilder_.build();
                }
            }

            private void buildPartial0(com.authzed.api.v1.WatchServiceOuterClass.WatchResponse result) {
                int from_bitField0_ = bitField0_;
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    result.changesThrough_ = changesThroughBuilder_ == null ? changesThrough_ : changesThroughBuilder_.build();
                }
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.authzed.api.v1.WatchServiceOuterClass.WatchResponse) {
                    return mergeFrom((com.authzed.api.v1.WatchServiceOuterClass.WatchResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.authzed.api.v1.WatchServiceOuterClass.WatchResponse other) {
                if (other == com.authzed.api.v1.WatchServiceOuterClass.WatchResponse.getDefaultInstance())
                    return this;
                if (updatesBuilder_ == null) {
                    if (!other.updates_.isEmpty()) {
                        if (updates_.isEmpty()) {
                            updates_ = other.updates_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureUpdatesIsMutable();
                            updates_.addAll(other.updates_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.updates_.isEmpty()) {
                        if (updatesBuilder_.isEmpty()) {
                            updatesBuilder_.dispose();
                            updatesBuilder_ = null;
                            updates_ = other.updates_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            updatesBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                                    ? getUpdatesFieldBuilder()
                                    : null;
                        } else {
                            updatesBuilder_.addAllMessages(other.updates_);
                        }
                    }
                }
                if (other.hasChangesThrough()) {
                    mergeChangesThrough(other.getChangesThrough());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                com.authzed.api.v1.Core.RelationshipUpdate m = input
                                        .readMessage(com.authzed.api.v1.Core.RelationshipUpdate.parser(), extensionRegistry);
                                if (updatesBuilder_ == null) {
                                    ensureUpdatesIsMutable();
                                    updates_.add(m);
                                } else {
                                    updatesBuilder_.addMessage(m);
                                }
                                break;
                            }
                            // case 10
                            case 18: {
                                input.readMessage(getChangesThroughFieldBuilder().getBuilder(), extensionRegistry);
                                bitField0_ |= 0x00000002;
                                break;
                            }
                            // case 18
                            default: {
                                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                    // was an endgroup tag
                                    done = true;
                                }
                                break;
                            }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private java.util.List<com.authzed.api.v1.Core.RelationshipUpdate> updates_ = java.util.Collections.emptyList();

            private void ensureUpdatesIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    updates_ = new java.util.ArrayList<com.authzed.api.v1.Core.RelationshipUpdate>(updates_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<com.authzed.api.v1.Core.RelationshipUpdate, com.authzed.api.v1.Core.RelationshipUpdate.Builder, com.authzed.api.v1.Core.RelationshipUpdateOrBuilder> updatesBuilder_;

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public java.util.List<com.authzed.api.v1.Core.RelationshipUpdate> getUpdatesList() {
                if (updatesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(updates_);
                } else {
                    return updatesBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public int getUpdatesCount() {
                if (updatesBuilder_ == null) {
                    return updates_.size();
                } else {
                    return updatesBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public com.authzed.api.v1.Core.RelationshipUpdate getUpdates(int index) {
                if (updatesBuilder_ == null) {
                    return updates_.get(index);
                } else {
                    return updatesBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public Builder setUpdates(int index, com.authzed.api.v1.Core.RelationshipUpdate value) {
                if (updatesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureUpdatesIsMutable();
                    updates_.set(index, value);
                    onChanged();
                } else {
                    updatesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public Builder setUpdates(int index, com.authzed.api.v1.Core.RelationshipUpdate.Builder builderForValue) {
                if (updatesBuilder_ == null) {
                    ensureUpdatesIsMutable();
                    updates_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    updatesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public Builder addUpdates(com.authzed.api.v1.Core.RelationshipUpdate value) {
                if (updatesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureUpdatesIsMutable();
                    updates_.add(value);
                    onChanged();
                } else {
                    updatesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public Builder addUpdates(int index, com.authzed.api.v1.Core.RelationshipUpdate value) {
                if (updatesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureUpdatesIsMutable();
                    updates_.add(index, value);
                    onChanged();
                } else {
                    updatesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public Builder addUpdates(com.authzed.api.v1.Core.RelationshipUpdate.Builder builderForValue) {
                if (updatesBuilder_ == null) {
                    ensureUpdatesIsMutable();
                    updates_.add(builderForValue.build());
                    onChanged();
                } else {
                    updatesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public Builder addUpdates(int index, com.authzed.api.v1.Core.RelationshipUpdate.Builder builderForValue) {
                if (updatesBuilder_ == null) {
                    ensureUpdatesIsMutable();
                    updates_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    updatesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public Builder addAllUpdates(java.lang.Iterable<? extends com.authzed.api.v1.Core.RelationshipUpdate> values) {
                if (updatesBuilder_ == null) {
                    ensureUpdatesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, updates_);
                    onChanged();
                } else {
                    updatesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public Builder clearUpdates() {
                if (updatesBuilder_ == null) {
                    updates_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    updatesBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public Builder removeUpdates(int index) {
                if (updatesBuilder_ == null) {
                    ensureUpdatesIsMutable();
                    updates_.remove(index);
                    onChanged();
                } else {
                    updatesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public com.authzed.api.v1.Core.RelationshipUpdate.Builder getUpdatesBuilder(int index) {
                return getUpdatesFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public com.authzed.api.v1.Core.RelationshipUpdateOrBuilder getUpdatesOrBuilder(int index) {
                if (updatesBuilder_ == null) {
                    return updates_.get(index);
                } else {
                    return updatesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public java.util.List<? extends com.authzed.api.v1.Core.RelationshipUpdateOrBuilder> getUpdatesOrBuilderList() {
                if (updatesBuilder_ != null) {
                    return updatesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(updates_);
                }
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public com.authzed.api.v1.Core.RelationshipUpdate.Builder addUpdatesBuilder() {
                return getUpdatesFieldBuilder().addBuilder(com.authzed.api.v1.Core.RelationshipUpdate.getDefaultInstance());
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public com.authzed.api.v1.Core.RelationshipUpdate.Builder addUpdatesBuilder(int index) {
                return getUpdatesFieldBuilder().addBuilder(index,
                        com.authzed.api.v1.Core.RelationshipUpdate.getDefaultInstance());
            }

            /**
             * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
             */
            public java.util.List<com.authzed.api.v1.Core.RelationshipUpdate.Builder> getUpdatesBuilderList() {
                return getUpdatesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<com.authzed.api.v1.Core.RelationshipUpdate, com.authzed.api.v1.Core.RelationshipUpdate.Builder, com.authzed.api.v1.Core.RelationshipUpdateOrBuilder> getUpdatesFieldBuilder() {
                if (updatesBuilder_ == null) {
                    updatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<com.authzed.api.v1.Core.RelationshipUpdate, com.authzed.api.v1.Core.RelationshipUpdate.Builder, com.authzed.api.v1.Core.RelationshipUpdateOrBuilder>(
                            updates_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                    updates_ = null;
                }
                return updatesBuilder_;
            }

            private com.authzed.api.v1.Core.ZedToken changesThrough_;

            private com.google.protobuf.SingleFieldBuilderV3<com.authzed.api.v1.Core.ZedToken, com.authzed.api.v1.Core.ZedToken.Builder, com.authzed.api.v1.Core.ZedTokenOrBuilder> changesThroughBuilder_;

            /**
             * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
             *
             * @return Whether the changesThrough field is set.
             */
            public boolean hasChangesThrough() {
                return ((bitField0_ & 0x00000002) != 0);
            }

            /**
             * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
             *
             * @return The changesThrough.
             */
            public com.authzed.api.v1.Core.ZedToken getChangesThrough() {
                if (changesThroughBuilder_ == null) {
                    return changesThrough_ == null ? com.authzed.api.v1.Core.ZedToken.getDefaultInstance() : changesThrough_;
                } else {
                    return changesThroughBuilder_.getMessage();
                }
            }

            /**
             * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
             */
            public Builder setChangesThrough(com.authzed.api.v1.Core.ZedToken value) {
                if (changesThroughBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    changesThrough_ = value;
                } else {
                    changesThroughBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
             */
            public Builder setChangesThrough(com.authzed.api.v1.Core.ZedToken.Builder builderForValue) {
                if (changesThroughBuilder_ == null) {
                    changesThrough_ = builderForValue.build();
                } else {
                    changesThroughBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
             */
            public Builder mergeChangesThrough(com.authzed.api.v1.Core.ZedToken value) {
                if (changesThroughBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) != 0) && changesThrough_ != null
                            && changesThrough_ != com.authzed.api.v1.Core.ZedToken.getDefaultInstance()) {
                        getChangesThroughBuilder().mergeFrom(value);
                    } else {
                        changesThrough_ = value;
                    }
                } else {
                    changesThroughBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
             */
            public Builder clearChangesThrough() {
                bitField0_ = (bitField0_ & ~0x00000002);
                changesThrough_ = null;
                if (changesThroughBuilder_ != null) {
                    changesThroughBuilder_.dispose();
                    changesThroughBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
             */
            public com.authzed.api.v1.Core.ZedToken.Builder getChangesThroughBuilder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getChangesThroughFieldBuilder().getBuilder();
            }

            /**
             * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
             */
            public com.authzed.api.v1.Core.ZedTokenOrBuilder getChangesThroughOrBuilder() {
                if (changesThroughBuilder_ != null) {
                    return changesThroughBuilder_.getMessageOrBuilder();
                } else {
                    return changesThrough_ == null ? com.authzed.api.v1.Core.ZedToken.getDefaultInstance() : changesThrough_;
                }
            }

            /**
             * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<com.authzed.api.v1.Core.ZedToken, com.authzed.api.v1.Core.ZedToken.Builder, com.authzed.api.v1.Core.ZedTokenOrBuilder> getChangesThroughFieldBuilder() {
                if (changesThroughBuilder_ == null) {
                    changesThroughBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<com.authzed.api.v1.Core.ZedToken, com.authzed.api.v1.Core.ZedToken.Builder, com.authzed.api.v1.Core.ZedTokenOrBuilder>(
                            getChangesThrough(), getParentForChildren(), isClean());
                    changesThrough_ = null;
                }
                return changesThroughBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:authzed.api.v1.WatchResponse)
        }

        // @@protoc_insertion_point(class_scope:authzed.api.v1.WatchResponse)
        private static final com.authzed.api.v1.WatchServiceOuterClass.WatchResponse DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new com.authzed.api.v1.WatchServiceOuterClass.WatchResponse();
        }

        public static com.authzed.api.v1.WatchServiceOuterClass.WatchResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<WatchResponse> PARSER = new com.google.protobuf.AbstractParser<WatchResponse>() {

            @java.lang.Override
            public WatchResponse parsePartialFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e)
                            .setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<WatchResponse> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<WatchResponse> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public com.authzed.api.v1.WatchServiceOuterClass.WatchResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_authzed_api_v1_WatchRequest_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_authzed_api_v1_WatchRequest_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_authzed_api_v1_WatchResponse_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_authzed_api_v1_WatchResponse_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

    static {
        java.lang.String[] descriptorData = { "\n\"authzed/api/v1/watch_service.proto\022\016au"
                + "thzed.api.v1\032\034google/api/annotations.pro" + "to\032\027validate/validate.proto\032\031authzed/api"
                + "/v1/core.proto\032\'authzed/api/v1/permissio" + "n_service.proto\"\202\002\n\014WatchRequest\022n\n\025opti"
                + "onal_object_types\030\001 \003(\tBO\372BL\222\001I\010\000\"ErC(\200\001"
                + "2>^([a-z][a-z0-9_]{1,62}[a-z0-9]/)*[a-z]" + "[a-z0-9_]{1,62}[a-z0-9]$\0227\n\025optional_sta"
                + "rt_cursor\030\002 \001(\0132\030.authzed.api.v1.ZedToke"
                + "n\022I\n\035optional_relationship_filters\030\003 \003(\013" + "2\".authzed.api.v1.RelationshipFilter\"w\n\r"
                + "WatchResponse\0223\n\007updates\030\001 \003(\0132\".authzed"
                + ".api.v1.RelationshipUpdate\0221\n\017changes_th" + "rough\030\002 \001(\0132\030.authzed.api.v1.ZedToken2l\n"
                + "\014WatchService\022\\\n\005Watch\022\034.authzed.api.v1." + "WatchRequest\032\035.authzed.api.v1.WatchRespo"
                + "nse\"\024\202\323\344\223\002\016\"\t/v1/watch:\001*0\001BH\n\022com.authz"
                + "ed.api.v1Z2github.com/authzed/authzed-go" + "/proto/authzed/api/v1b\006proto3" };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
                new com.google.protobuf.Descriptors.FileDescriptor[] { com.google.api.AnnotationsProto.getDescriptor(),
                        io.envoyproxy.pgv.validate.Validate.getDescriptor(), com.authzed.api.v1.Core.getDescriptor(),
                        com.authzed.api.v1.PermissionService.getDescriptor() });
        internal_static_authzed_api_v1_WatchRequest_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_authzed_api_v1_WatchRequest_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_authzed_api_v1_WatchRequest_descriptor,
                new java.lang.String[] { "OptionalObjectTypes", "OptionalStartCursor", "OptionalRelationshipFilters" });
        internal_static_authzed_api_v1_WatchResponse_descriptor = getDescriptor().getMessageTypes().get(1);
        internal_static_authzed_api_v1_WatchResponse_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_authzed_api_v1_WatchResponse_descriptor,
                new java.lang.String[] { "Updates", "ChangesThrough" });
        com.google.protobuf.ExtensionRegistry registry = com.google.protobuf.ExtensionRegistry.newInstance();
        registry.add(com.google.api.AnnotationsProto.http);
        registry.add(io.envoyproxy.pgv.validate.Validate.rules);
        com.google.protobuf.Descriptors.FileDescriptor.internalUpdateFileDescriptor(descriptor, registry);
        com.google.api.AnnotationsProto.getDescriptor();
        io.envoyproxy.pgv.validate.Validate.getDescriptor();
        com.authzed.api.v1.Core.getDescriptor();
        com.authzed.api.v1.PermissionService.getDescriptor();
    }
    // @@protoc_insertion_point(outer_class_scope)
}
